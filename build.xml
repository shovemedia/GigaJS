<?xml version="1.0" encoding="utf-8"?>
<project name="giga" default="" basedir=".">

    <!-- properties -->

    <property file="build.properties" />

    <!-- custom tasks -->

    <taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" classpath="${closure_compiler.jar}"/>

    <!-- targets -->

    <target name="purgeJsDeploy">

        <echo message="Cleaning ${build.dir} ..." />

        <delete dir="${build.dir}" />
        <mkdir dir="${build.dir}"/>        

    </target>








<target name="stripLogModule" description="Strip log / console.log lines">
    <echo>Commenting out log / console.log lines from ${build.dir}/${module.dir}${dist.module.name}</echo>

    <replaceregexp match="(\bwindow\.console\b.log\s*\(.*\)[;]*)" replace="" flags="g" >
        <fileset dir="${build.dir}">
            <include name="**/${dist.module.name}"/>
        </fileset>
    </replaceregexp>

    <replaceregexp match="(\bconsole\b.log\s*\(.*\)[;]*)" replace="" flags="g" >
        <fileset dir="${build.dir}">
            <include name="**/${dist.module.name}"/>
        </fileset>
    </replaceregexp>

    <replaceregexp match="((?&lt;!\.)\blog\b\s*\(.*\)[;]*)" replace="" flags="g" >
        <fileset dir="${build.dir}">
            <include name="**/${dist.module.name}"/>
        </fileset>
    </replaceregexp>
</target>

<target name="stripLogSite" description="Strip log / console.log lines">
    <echo>Commenting out log / console.log lines from ${build.dir}/${site.dir}${dist.site.name}</echo>

    <replaceregexp match="(\bwindow\.console\b.log\s*\(.*\)[;]*)" replace="" flags="g" >
        <fileset dir="${build.dir}">
            <include name="**/${dist.site.name}"/>
        </fileset>
    </replaceregexp>

    <replaceregexp match="(\bconsole\b.log\s*\(.*\)[;]*)" replace="" flags="g" >
        <fileset dir="${build.dir}">
            <include name="**/${dist.site.name}"/>
        </fileset>
    </replaceregexp>

    <replaceregexp match="((?&lt;!\.)\blog\b\s*\(.*\)[;]*)" replace="" flags="g" >
        <fileset dir="${build.dir}">
            <include name="**/${dist.site.name}"/>
        </fileset>
    </replaceregexp>
</target>








    <target name="compileViaNode">

        <echo message="Building ${product.name}..." />

<!--
        <buildnumber file="${build.dir}/build.number"/>
-->

        <tstamp>
            <format property="build.date" pattern="yyyy/MM/dd hh:mm aa" unit="hour"/>
        </tstamp>


		<!-- HOME -->
	
        <echo message="Building:  from src: ${src.dir}/   to: ${build.dir}" />

		<exec executable="node">
			<arg value="${r.js}"/>
			<arg value="-o"/>
			<arg value="build.js"/>
		</exec>

	   <echo message="${product.name} built." />

  	</target>






    <target name="lintModule">
        <echo message="JSLinting ${product.name}..."/>

        <apply executable="java">
            <filelist dir="${dist.dir}${module.dir}">
                <file name="${dist.module.name}"/>
            </filelist>
            <arg line="-jar"/>
            <arg path="${jslint.jar}"/>
        </apply>

        <echo message="JSLinted ${dist.module.name}."/>
    </target>

    <target name="lintSite">
        <echo message="JSLinting ${product.name}..."/>

        <apply executable="java">
            <filelist dir="${dist.dir}${site.dir}">
                <file name="${dist.site.name}"/>
            </filelist>
            <arg line="-jar"/>
            <arg path="${jslint.jar}"/>
        </apply>

        <echo message="JSLinted ${dist.site.name}."/>
    </target>


<!--
-->


    <target name="minifyModule" depends="stripLogModule, lintModule">
        <echo message="Building ${dist.module.min.name}..." />

        <jscomp compilationLevel="simple" debug="false" output="${build.dir}/${module.dir}${dist.module.min.name}">
            <externs dir="${dev.dir}">
                <file name="externs.js"/>
            </externs>
            <sources dir="${build.dir}">
                <file name="${module.dir}${dist.module.name}"/>
            </sources>
        </jscomp>

        <echo message="${dist.module.min.name} built." />
    </target>

    <!-- stripLogSite, -->
    <target name="minifySite" depends=" lintSite">
        <echo message="Building ${dist.site.min.name}..." />

        <jscomp compilationLevel="simple" debug="false" output="${build.dir}/${site.dir}${dist.site.min.name}">
            <externs dir="${dev.dir}">
                <file name="externs.js"/>
            </externs>
            <sources dir="${build.dir}">
                <file name="${site.dir}${dist.site.name}"/>
            </sources>
        </jscomp>

        <echo message="${dist.site.min.name} built." />
    </target>



    <target name="-purgeDocs">
        <delete dir="${docs.dir}" />
        <mkdir dir="${docs.dir}"/>
    </target>




    <target name="generateDocs" depends="-purgeDocs">
        <echo message="Generating documentation ${dist.name} ${dist.dir}" />


        <taskdef name="jsdoctoolkit" classname="uk.co.darrenhurley.ant.tasks.JsDocToolkit" classpath="${jsdoc-toolkit.dir}/jsdoc-toolkit-ant-task-1.1.2.jar;${jsdoc-toolkit.dir}/java/classes/js.jar" />

        <jsdoctoolkit jsdochome="${jsdoc-toolkit.dir}/" template="xxx"  outputdir="${docs.dir}/demo">
            <source file="${src.dir}/test" />
            <source file="${src.dir}/ContentRenderer.js" />
            <source file="${src.dir}/TestTransitions.js" />
        </jsdoctoolkit>

        <jsdoctoolkit jsdochome="${jsdoc-toolkit.dir}/" template="xxx" inputdir="${src.dir}/lib/giga" outputdir="${docs.dir}/giga">
        </jsdoctoolkit>    

<!--

        <apply executable="java" parallel="false" verbose="true">
            <fileset dir="${src.dir}">

            </fileset>

            <arg line="-jar" />
            <arg path="${jsdoc-toolkit.dir}/jsrun.jar" />
            <arg value="${jsdoc-toolkit.dir}/app/run.js" />
            <arg value="-a" />
            <arg value="-p" />
            <arg value="-t=${jsdoc-toolkit.dir}/templates/xxx" />
            <arg value="-d=${docs.dir}" />
        </apply>
-->

        <echo message="Documentation generated" />
    </target>

    <target name="clean">
        <delete includeEmptyDirs="true">
            <fileset dir="${build.dir}" defaultexcludes="no" 
                includes="**/*"
                excludes="${module.dir}${dist.module.name} ${module.dir}${dist.module.min.name} ${site.dir}${dist.site.name} ${site.dir}${dist.site.min.name} all.css">
            </fileset>              
        </delete>
    </target> 

    <target name="copyBuildToDemo">
        <echo message="Copy JS build to demo..." />

        <echo message="module demo..." />
        <copy todir="${demo.dir}/module/js/build">
            <fileset dir="${build.dir}/lib/giga"></fileset>
        </copy>

        <echo message="site demo..." />
        <copy todir="${demo.dir}/site/js/build">
            <fileset dir="${build.dir}/test"></fileset>
        </copy>
    </target>

    <target name="beep">
        <exec executable="afplay">
		  <arg line=" -v 2 /System/Library/Sounds/Blow.aiff"/>
		</exec>
        	 
    </target>       




<!--  -->


    
    <target name="buildCSS" depends="">
      <exec executable="sh" dir=".">
          <arg value="-c" />
          <arg value="${yui} -o '${build.dir}/giga.all.css' ${build.dir}/style/giga.all.css" />
      </exec>

      <echo message="Finished running YUI on CSS files." />
    </target>

<target name="copyCSS" depends="">
    	<echo message="Copy CSS to build..." />
		<copy todir="${build.dir}/style">
			<fileset dir="${css.dir}"></fileset>
		</copy>
 </target>

    <!--    -->
    <target name="build" depends="purgeJsDeploy, copyCSS, compileViaNode, minifyModule, minifySite, buildCSS, clean, copyBuildToDemo, beep">
        <echo message="Build Complete." />
    </target>

</project>
